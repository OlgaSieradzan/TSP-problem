Mean = mean(CZAS)
) %>%
as.data.frame()
rownames(ACO_clasic_time) <- c("TSP_48", "TSP_76", "TSP_127")
ACO_clasic_time[,2:4]
num_ants_mrowki_tsp48 <- num_ants %>%
filter(DATASET == "DATA1") %>%
as.data.frame()
num_ants_mrowki_tsp76 <- num_ants %>%
filter(DATASET == "DATA2") %>%
as.data.frame()
num_ants_mrowki_tsp127 <- num_ants %>%
filter(DATASET == "DATA3") %>%
as.data.frame()
ggplot(num_ants_mrowki_tsp48, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ liczby mrówek na długość ścieżki (TSP_48)",
x = "Liczba mrówek",
y = "Długość ścieżki"
) +
theme_light()
num_ants_mrowki_tsp48 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(num_ants_mrowki_tsp76, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ liczby mrówek na długość ścieżki (TSP_76)",
x = "Liczba mrówek",
y = "Długość ścieżki"
) +
theme_light()
num_ants_mrowki_tsp76 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(num_ants_mrowki_tsp127, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ liczby mrówek na długość ścieżki (TSP_127)",
x = "Liczba mrówek",
y = "Długość ścieżki"
) +
theme_light()
num_ants_mrowki_tsp127 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
max_it_mrowki_tsp48 <- max_it %>%
filter(DATASET == "DATA1") %>%
as.data.frame()
max_it_mrowki_tsp76 <- max_it %>%
filter(DATASET == "DATA2") %>%
as.data.frame()
max_it_mrowki_tsp127 <- max_it %>%
filter(DATASET == "DATA3") %>%
as.data.frame()
ggplot(max_it_mrowki_tsp48, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ liczby iteracji na długość ścieżki (TSP_48)",
x = "Liczba iteracji",
y = "Długość ścieżki"
) +
theme_light()
max_it_mrowki_tsp48 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(max_it_mrowki_tsp76, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ liczby iteracji na długość ścieżki (TSP_76)",
x = "Liczba iteracji",
y = "Długość ścieżki"
) +
theme_light()
max_it_mrowki_tsp76 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(max_it_mrowki_tsp127, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ liczby iteracji na długość ścieżki (TSP_127)",
x = "Liczba iteracji",
y = "Długość ścieżki"
) +
theme_light()
max_it_mrowki_tsp127 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
alpha_mrowki_tsp48 <- alpha %>%
filter(DATASET == "DATA1") %>%
as.data.frame()
alpha_mrowki_tsp76 <- alpha %>%
filter(DATASET == "DATA2") %>%
as.data.frame()
alpha_mrowki_tsp127 <- alpha %>%
filter(DATASET == "DATA3") %>%
as.data.frame()
ggplot(alpha_mrowki_tsp48, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ parametru alfa na długość ścieżki (TSP_48)",
x = "Parametr alfa",
y = "Długość ścieżki"
) +
theme_light()
alpha_mrowki_tsp48 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(alpha_mrowki_tsp76, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ parametru alfa na długość ścieżki (TSP_76)",
x = "Parametr alfa",
y = "Długość ścieżki"
) +
theme_light()
alpha_mrowki_tsp76 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(alpha_mrowki_tsp127, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ parametru alfa na długość ścieżki (TSP_127)",
x = "Parametr alfa",
y = "Długość ścieżki"
) +
theme_light()
alpha_mrowki_tsp127 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
beta_mrowki_tsp48 <- beta %>%
filter(DATASET == "DATA1") %>%
as.data.frame()
beta_mrowki_tsp76 <- beta %>%
filter(DATASET == "DATA2") %>%
as.data.frame()
beta_mrowki_tsp127 <- beta %>%
filter(DATASET == "DATA3") %>%
as.data.frame()
ggplot(beta_mrowki_tsp48, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ parametru beta na długość ścieżki (TSP_48)",
x = "Parametr beta",
y = "Długość ścieżki"
) +
theme_light()
beta_mrowki_tsp48 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(beta_mrowki_tsp76, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ parametru beta na długość ścieżki (TSP_76)",
x = "Parametr beta",
y = "Długość ścieżki"
) +
theme_light()
beta_mrowki_tsp76 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(beta_mrowki_tsp127, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ parametru beta na długość ścieżki (TSP_127)",
x = "Parametr beta",
y = "Długość ścieżki"
) +
theme_light()
beta_mrowki_tsp127 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
rho_mrowki_tsp48 <- rho %>%
filter(DATASET == "DATA1") %>%
as.data.frame()
rho_mrowki_tsp76 <- rho %>%
filter(DATASET == "DATA2") %>%
as.data.frame()
rho_mrowki_tsp127 <- rho %>%
filter(DATASET == "DATA3") %>%
as.data.frame()
ggplot(rho_mrowki_tsp48, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ rho na długość ścieżki (TSP_48)",
x = "Rho",
y = "Długość ścieżki"
) +
theme_light()
rho_mrowki_tsp48 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(rho_mrowki_tsp76, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ rho na długość ścieżki (TSP_76)",
x = "Rho",
y = "Długość ścieżki"
) +
theme_light()
rho_mrowki_tsp76 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
ggplot(rho_mrowki_tsp127, aes(x = as.factor(PARAMETR), y = WYNIK_1)) +
geom_boxplot(fill = "pink") +
labs(
title = "Wpływ rho na długość ścieżki (TSP_127)",
x = "Rho",
y = "Długość ścieżki"
) +
theme_light()
rho_mrowki_tsp127 %>%
group_by(PARAMETR) %>%
summarise(
Min = min(WYNIK_1),
Max = max(WYNIK_1),
Mean = mean(WYNIK_1)
) %>%
as.data.frame()
knitr::opts_chunk$set(echo = TRUE)
NN_tsp48_punkt <- NN_tsp48$Punkt[NN_tsp48$Wynik == min(NN_tsp48$Wynik)]
NN_tsp48_punkt[c(10,35),]
NN_tsp48_punkt
NN_tsp48_punkt <- NN_tsp48$Punkt[NN_tsp48$Wynik == min(NN_tsp48$Wynik)]
NN_tsp48[c(10,35),]
NN_tsp76_punkt <- NN_tsp76$Punkt[NN_tsp76$Wynik == min(NN_tsp76$Wynik)]
NN_tsp76[16,]
NN_tsp127_punkt <- NN_tsp127$Punkt[NN_tsp127$Wynik == min(NN_tsp127$Wynik)]
NN_tsp127[117,]
knitr::opts_chunk$set(echo = TRUE)
# Dane wyników dla poszczególnych algorytmów
library(knitr)
# Dane
results <- data.frame(
Algorithm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczne", "NEH", "Solver"),
`50 Operacji` = c(3730, 3761, 3778, 3768, 3882, 3924),
`100 Operacji` = c(5523, 5516, 5619, 5552, 5672, 5816),
`200 Operacji` = c(10574, 10609, 10713, 10623, 10728, 11086)
)
# Generowanie tabeli w Markdown
kable(results, caption = "Porównanie wyników algorytmów dla różnych zestawów operacji.")
TsP_48_best_results <- read_excel("C:/Users/user/Downloads/`Zestawienie wyników TSP`.xlsx",
sheet = "Klasyk_wyniki")
library(readr)
TsP_48_best_results <- read_excel("C:/Users/user/Downloads/`Zestawienie wyników TSP`.xlsx",
sheet = "Klasyk_wyniki")
library(readxl)
TsP_48_best_results <- read_excel("C:/Users/user/Downloads/`Zestawienie wyników TSP`.xlsx",
sheet = "Klasyk_wyniki")
library(readxl)
TsP_48_best_results <- read_excel("C:/Users/user/Downloads/Zestawienie wyników TSP.xlsx",
sheet = "TSP_48")
library(readxl)
TsP_48_best_results <- read_excel("C:/Users/user/Downloads/Zestawienie wyników TSP.xlsx",
sheet = "TSP 48")
TsP_76_best_results <- read_excel("C:/Users/user/Downloads/Zestawienie wyników TSP.xlsx",
sheet = "TSP 76")
TsP_127_best_results <- read_excel("C:/Users/user/Downloads/Zestawienie wyników TSP.xlsx",
sheet = "TSP 127")
results <- data.frame(
Algorithm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytm Genetyczny", "Algorytm mrówkowy", "Solver"),
`TSP_48` = c(3730, 3761, 3778, 3768, 3882, 3924),
`TSP_76` = c(5523, 5516, 5619, 5552, 5672, 5816),
`TSP_127` = c(10574, 10609, 10713, 10623, 10728, 11086)
)
results
View(TsP_48_best_results)
View(TsP_48_best_results)
TsP_48_best_results
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Wiersz1 = c("napisz najlepszy wynik", "", ""),
Wiersz2 = c("", paste(algorytmy, collapse = ", "), ""),
Wiersz3 = c("", "", paste(najlepsze_wyniki, collapse = ", "))
)
# Wyświetlanie tabeli
print(tabela)
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Wiersz1 = c("napisz najlepszy wynik", "napisz najlepszy wynik", "napisz najlepszy wynik"),
Algorytm1 = algorytmy[1],
Algorytm2 = algorytmy[2],
Algorytm3 = algorytmy[3],
Wynik1 = najlepsze_wyniki[1],
Wynik2 = najlepsze_wyniki[2],
Wynik3 = najlepsze_wyniki[3]
)
# Wyświetlanie tabeli
print(tabela)
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Algorytm1 = algorytmy[1],
Algorytm2 = algorytmy[2],
Algorytm3 = algorytmy[3],
Wynik1 = najlepsze_wyniki[1],
Wynik2 = najlepsze_wyniki[2],
Wynik3 = najlepsze_wyniki[3]
)
# Wyświetlanie tabeli
print(tabela)
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Algorytm1 = c(algorytmy[1], najlepsze_wyniki[1]),
Algorytomy2 = c(algorytmy[2], najlepsze_wyniki[2]),
Algorytomy3 = c(algorytmy[3], najlepsze_wyniki[3])
)
# Wyświetlanie tabeli
print(tabela)
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli bez nagłówków
tabela <- data.frame(
c("Algorytm", "Wartość"),  # pierwzsza kolumna
algorytmy,
najlepsze_wyniki
)
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Kategoria = c("Algorytm", "Wartość"),
Algorytm_A = c(algorytmy[1], najlepsze_wyniki[1]),
Algorytm_B = c(algorytmy[2], najlepsze_wyniki[2]),
Algorytm_C = c(algorytmy[3], najlepsze_wyniki[3])
)
# Wyświetlanie tabeli bez wierszy nagłówkowych
print(tabela[2, ], row.names = FALSE)
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Kategoria = c("Algorytm", "Wartość"),
Algorytm_A = c(algorytmy[1], najlepsze_wyniki[1]),
Algorytm_B = c(algorytmy[2], najlepsze_wyniki[2]),
Algorytm_C = c(algorytmy[3], najlepsze_wyniki[3])
)
# Wyświetlanie tabeli bez numerów wierszy
print(tabela[2, -1], row.names = FALSE)
results <- data.frame(
Algorithm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytm Genetyczny", "Algorytm mrówkowy", "Solver"),
`TSP_48` = c(3730, 3761, 3778, 3768, 3882, 3924),
`TSP_76` = c(5523, 5516, 5619, 5552, 5672, 5816),
`TSP_127` = c(10574, 10609, 10713, 10623, 10728, 11086)
)
results
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Kategoria = c("Algorytm", "Wartość"),
Algorytm_A = c(algorytmy[1], najlepsze_wyniki[1]),
Algorytm_B = c(algorytmy[2], najlepsze_wyniki[2]),
Algorytm_C = c(algorytmy[3], najlepsze_wyniki[3])
) %>% kbl
library(dplyr)
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Kategoria = c("Algorytm", "Wartość"),
Algorytm_A = c(algorytmy[1], najlepsze_wyniki[1]),
Algorytm_B = c(algorytmy[2], najlepsze_wyniki[2]),
Algorytm_C = c(algorytmy[3], najlepsze_wyniki[3])
) %>% kbl
library(dplyr)
library(kableExtra)
# Tworzenie danych
algorytmy <- c("Algorytm A", "Algorytm B", "Algorytm C")  # przykładowe algorytmy
najlepsze_wyniki <- c(95, 89, 92)  # przykładowe wyniki
# Tworzenie tabeli
tabela <- data.frame(
Kategoria = c("Algorytm", "Wartość"),
Algorytm_A = c(algorytmy[1], najlepsze_wyniki[1]),
Algorytm_B = c(algorytmy[2], najlepsze_wyniki[2]),
Algorytm_C = c(algorytmy[3], najlepsze_wyniki[3])
) %>% kbl
# Wyświetlanie tabeli bez numerów wierszy
print(tabela[2, -1], row.names = FALSE)
TSP_127_best_results <- data.frame(
Algorytm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczny", "Algorytm mrówkowy", "NN", "Solver"),
best = c(119118.3,143162.3,120791.7,133161.4,123471,133970.6,140217.6))
colnames(TSP_127_best_results) < c("Algorytm", "Najlepszy wynik")
TSP_127_best_results <- as.data.frame(lapply(TSP_127_best_results, format, justify = "right"))
TSP_127_best_results
TSP_76_best_results <- data.frame(
Algorytm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczny", "Algorytm mrówkowy", "NN", "Solver"),
best = c(108942.2,112768.6,110041.2,112600.5,117472.3,130921,118293.5))
rownames(TSP_76_best_results) < c("Algorytm", "Najlepszy wynik")
TSP_76_best_results
TSP_76_best_results <- data.frame(
Algorytm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczny", "Algorytm mrówkowy", "NN", "Solver"),
best = c(108942.2,112768.6,110041.2,112600.5,117472.3,130921,118293.5))
colnames(TSP_76_best_results) <- c("Algorytm", "Najlepszy wynik")
TSP_76_best_results <- as.data.frame(lapply(TSP_76_best_results, format, justify = "right"))
TSP_76_best_results
TSP_76_best_results <- data.frame(
Algorytm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczny", "Algorytm mrówkowy", "NN", "Solver"),
best = c(108942.2,112768.6,110041.2,112600.5,117472.3,130921,118293.5))
colnames(TSP_76_best_results) <- c("Algorytm", "Najlepszy wynik")
TSP_76_best_results
TSP_48_best_results <- data.frame(
Algorytm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczny", "Algorytm mrówkowy", "NN", "Solver"),
best = c(10692,10811,10788,10795,11128,12012,10868))
colnames(TSP_48_best_results) <- c("Algorytm", "Najlepszy wynik")
# Transpozycja tabeli
TSP_48_best_results_transposed <- t(TSP_48_best_results)
# Przekształcenie transponowanej tabeli z powrotem na ramkę danych
TSP_48_best_results_transposed <- as.data.frame(TSP_48_best_results_transposed)
# Wyświetlanie obróconej tabeli
print(TSP_48_best_results_transposed)
TSP_48_best_results
TSP_48_best_results <- data.frame(
Algorytm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczny", "Algorytm mrówkowy", "NN", "Solver"),
best = c(10692,10811,10788,10795,11128,12012,10868))
colnames(TSP_48_best_results) <- c("Algorytm", "Najlepszy wynik")
TSP_48_best_results$Algorytm <- format(TSP_48_best_results$Algorytm, justify = "right")
TSP_48_best_results
TSP_48_best_results <- data.frame(
Algorytm = c("Iteracyjna wspinaczka", "Symulowane wyżarzanie", "Tabu Search", "Algorytmy Genetyczny", "Algorytm mrówkowy", "NN", "Solver"),
best = c(10692,10811,10788,10795,11128,12012,10868))
colnames(TSP_48_best_results) <- c("Algorytm", "Najlepszy wynik")
# Upewnienie się, że kolumna "Algorytm" jest typu character
TSP_48_best_results$Algorytm <- as.character(TSP_48_best_results$Algorytm)
# Wyrównanie tekstu w kolumnie "Algorytm" do prawej strony
TSP_48_best_results$Algorytm <- format(TSP_48_best_results$Algorytm, justify = "right")
TSP_48_best_results
